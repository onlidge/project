Об игре:

Это игра в стиле text-based game, я бы так же сказал текстовый рогалик. 
Цель игры в том чтобы набрать как можно больше очков, подзадача - победить последнего босса.
Очки даются почти за все что можно улучшить, уровень пещеры, экипировку, статы и так далее
Очки снимаются за количество смертей и время проведенное в пещере
Процесс игры такой: вы выбираете класс, у каждого класса свои начальные характеристики, все баффы от предметов и статов добавляют какой-то процент от базовых характеристик.
После того как выбрали класс вы попадаете в замок, в замке можно либо зайти в пещеру, либо узнать информацию о своих предметах, либо зайти в одно из зданий: Кузница, Магазин, Библиотека.
После того, как вы зашли в пещеру вам нужно выбрать ее уровень, не превышающий ваш текущий(изначально уровень 1, всего их 5). После этого вам несколько раз придется сразиться с тремя монстрами
Битва с монстрами происходит пошагово, вам нужно выбрать тип атаки, способ атаки и цель/цели, после чего вы атакуете цели, затем оставшиеся в живых монстры атакуют вас. 
За каждого монстра вы будете получать золото и опыт, а за каждую пройденную тройку вы будете получать экипировку.
В случае смерти с вас снимутся очки и вы вернетесь в замок
В Кузнице вы можете улучшить свою экипировку
В Магазине можете купить сундук, из которого вы получите случайную экипировку
В Библиотеке можете найти информацию об игре


Детали реализации:

Есть класс Monster, у него есть свои характеристики и награда за убийство, а так же функция, которая генерирует случайного монстра, в зависимости от сложности и уровня. Для монстра выделен свой хэдэр
Есть класс location, в локации есть несколько троек монстров, а так же метод, который обновляет локацию, пересоздавая монстров в ней. Для локации выделен свой хэдэр
Есть класс equipment, у экипировки есть несколько параметров, а так же методы, которые возвращают характеристики экипировки. Для экипировки выделен свой хэдэр
Есть класс Hero, в этом классе больше всего полей, каждый герой хранит в себе свои характеристики, экипировку а так же прогресс в виде нескольких полей. У героя есть несколько методов, которые вычисляют статы или обновляют их если они изменились. А так же несколько методов, которые возвращают информацию о герое. Для героя выделен свой хэдэр

Почти весь геймплей реализован с помощью класса low_level_gameplay. В нем есть несколько полей-строк, отвечающих за название, название команд, текст, который выводится если класс вызвали и так далее
У этого класса есть функция gameplay, в которой просят ввести команду и если команда была введена корректно вызывается наследуемый метод execute, которому на вход дается номер команды и ссылка на героя.
Почти все части игры это наследники low_level_gameplay, в которых что-то происходит с героем в execute.
Исключением являются наследники high_level_gameplay, который в свою очередь тоже наследник lowe_level_gameplay, но у него в полях есть вектор из указателей на другие части геймплея.
В данный момент есть только 2 наследника это battle и Game. high_level_gameplay нужен для того, чтобы можно было реализовать последовательное дерево из выборов игрока, где после каждого ввода команды происходит что-то уникальное.
Все это делится на 2 хэдэра, в зависимости от того вызываются эти части геймплея в main или нет(за исключением levelup, я планировал/планирую вызывать его в main, но сейчас это не так)

Все взаимодействия с интерфейсом происходят через функции в хэдэре Interface.h и в теории могут быть заменены на другие, если нужен не консольный интерфейс, но в данный момент нет ничего, чтобы требовало что-то кроме ввода и вывода текста.


Комментарии:
На данный момент код вроде выглядит гораздо лучше чем был, получилось почти все структурировать.
Насчет полосы текста в коде и Data.h: я еще не придумал как это получше реализовать или подгружать из файла, я попробую все это сделать к 3ему чепоинту, т.к. одной из фич хочу добавить возможность сохранения, а там это как раз основная часть работы.
По поводу однотипных переменных, я почти все смог засунуть в массивы, кроме статов экипировки, это меняет почти все взаимодействие с экипировкой, но это все еще не красиво и я попытаюсь это все таки исправить.
Я наиграл часов в 20 в собственную игру, а так же просил друзей, я убрал самое неприятное - команды с большой буквы, теперь можно писать буквы в любом регистре.
так же очень нужна механика сохранения. 
А еще training не нужен, поэтому я убрал эту возможность.
В остальном я заметил, что деление на магический и физический урон совершенно бесполезно, и я бы хотел просто сделать характеристику атаки, которая зависит от этих двух. Это во-первых уберет еще один ввод во время битвы, во-вторых сделает разнообразней игру, а в-третьих никак почти не поменяет код.
Так же хотелось бы добавить классам ультимативные особенности, сделать их разными, потому как сейчас это просто двойная атака по каждому монстру. Возможно еще добавить какие-нибудь пассивки, вроде не так сложно, главное придумать что-нибудь.
В плане баланса, я конечно попытался сделать что-то, но его пока нет, пока что просто играбельно, в том плане что игра проходится и не сразу. Монстры в начале слишком сложные, а ближе к концу слишком простые, так что более менее понятно что делать. Самое дисбалансное это классы.
Насчет интерфейса, он немного изменился, стало более понятно что вводить и что происходит, например из магазина раньше можно было не выйти, если ты не знал как. 
Так же я добавил отчиску консоли перед некоторыми событиями, это дает возможность получше написать что просиходит, ну и как по мне выглядит покрасивей. 
Но это создало проблему, она заключается в том, что сразу после некоторой информации идет отчитска экрана, и пришлось добавить функцию, которая просит что-то сделать перед тем как продолжить, 
иначе нужный текст просто не покажут, в данный момент нужно ввести любую строку, но по опыту стало немного неудобно, но в сумме стало лучше.
Из фич пока что придумал только сохранение и ультимативные/пассивки для классов(а так же реализацию этих классов, а то пока это только разные Hero)
Но думаю реализация еще одного здания больше подходит для фичи, так как я как раз буду использовать то что уже написал и мне остается только придумать что сделать.

